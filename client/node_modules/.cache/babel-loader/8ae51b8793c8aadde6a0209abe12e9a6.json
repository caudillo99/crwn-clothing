{"ast":null,"code":"var _jsxFileName = \"/home/diego/Documents/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { convertCollectionsSnapshotToMap, firestore } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n_c = CollectionsOverviewWithSpinner;\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n_c2 = CollectionPageWithSpinner;\n\nclass Shop extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsuscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionsOverviewWithSpinner, {\n          isLoading: loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:categoryId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionPageWithSpinner, {\n          isLoading: loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(Shop);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionsOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionPageWithSpinner\");","map":{"version":3,"sources":["/home/diego/Documents/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Component","Route","connect","CollectionsOverview","CollectionPage","convertCollectionsSnapshotToMap","firestore","updateCollections","WithSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","Shop","state","loading","unsuscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,+BAAT,EAA0CC,SAA1C,QAA2D,+BAA3D;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACL,mBAAD,CAAlD;KAAMM,8B;AACN,MAAMC,yBAAyB,GAAGF,WAAW,CAACJ,cAAD,CAA7C;MAAMM,yB;;AAEN,MAAMC,IAAN,SAAmBX,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAE1BY,KAF0B,GAElB;AACLC,MAAAA,OAAO,EAAE;AADJ,KAFkB;AAAA,SAM1BC,sBAN0B,GAMD,IANC;AAAA;;AAQ1BC,EAAAA,iBAAiB,GAAG;AACjB,UAAM;AAAER,MAAAA;AAAF,QAAwB,KAAKS,KAAnC;AACA,UAAMC,aAAa,GAAGX,SAAS,CAACY,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACxC,YAAMC,cAAc,GAAGhB,+BAA+B,CAACe,QAAD,CAAtD;AACAb,MAAAA,iBAAiB,CAACc,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAE;AAAX,OAAd;AACF,KAJD;AAKF;;AAGDU,EAAAA,MAAM,GAAG;AACN,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKR,KAAvB;AACA,UAAM;AAAEH,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AACA,wBACG;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACG,QAAC,KAAD;AACG,QAAA,KAAK,MADR;AACS,QAAA,IAAI,EAAG,GAAEY,KAAK,CAACC,IAAK,EAD7B;AAEG,QAAA,MAAM,EAAGT,KAAD,iBAAU,QAAC,8BAAD;AAAgC,UAAA,SAAS,EAAEH,OAA3C;AAAA,aAAwDG;AAAxD;AAAA;AAAA;AAAA;AAAA;AAFrB;AAAA;AAAA;AAAA;AAAA,cADH,eAKG,QAAC,KAAD;AACG,QAAA,IAAI,EAAG,GAAEQ,KAAK,CAACC,IAAK,cADvB;AAEG,QAAA,MAAM,EAAGT,KAAD,iBAAW,QAAC,yBAAD;AAA2B,UAAA,SAAS,EAAEH,OAAtC;AAAA,aAAmDG;AAAnD;AAAA;AAAA;AAAA;AAAA;AAFtB;AAAA;AAAA;AAAA;AAAA,cALH;AAAA;AAAA;AAAA;AAAA;AAAA,YADH;AAYF;;AAnCyB;;AAsC7B,MAAMU,kBAAkB,GAAGC,QAAQ,KAAK;AACrCpB,EAAAA,iBAAiB,EAAEc,cAAc,IAC9BM,QAAQ,CAACpB,iBAAiB,CAACc,cAAD,CAAlB;AAF0B,CAAL,CAAnC;;AAKA,eAAenB,OAAO,CAAC,IAAD,EAAOwB,kBAAP,CAAP,CAAkCf,IAAlC,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component'\nimport CollectionPage from '../collection/collection.component';\nimport { convertCollectionsSnapshotToMap, firestore } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass Shop extends Component {\n   // eslint-disable-next-line no-undef\n   state = {\n      loading: true\n   };\n\n   unsuscribeFromSnapshot = null;\n\n   componentDidMount() {\n      const { updateCollections } = this.props;\n      const collectionRef = firestore.collection('collections');\n\n      collectionRef.onSnapshot(async snapshot => {\n         const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n         updateCollections(collectionsMap);\n         this.setState({ loading: false });\n      })\n   }\n   \n\n   render() {\n      const { match } = this.props;\n      const { loading } = this.state;\n      return(\n         <div className='shop-page'>\n            <Route \n               exact path={`${match.path}`} \n               render={(props)=> <CollectionsOverviewWithSpinner isLoading={loading} {...props} />} \n            />\n            <Route \n               path={`${match.path}/:categoryId`} \n               render={(props) => <CollectionPageWithSpinner isLoading={loading} {...props} /> }\n            />\n         </div>\n      );\n   }\n}\n\nconst mapDispatchToProps = dispatch => ({\n   updateCollections: collectionsMap => \n      dispatch(updateCollections(collectionsMap))\n})\n\nexport default connect(null, mapDispatchToProps)(Shop);"]},"metadata":{},"sourceType":"module"}