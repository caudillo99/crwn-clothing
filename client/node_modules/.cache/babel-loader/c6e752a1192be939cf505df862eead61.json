{"ast":null,"code":"var _jsxFileName = \"/home/diego/Documents/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { createStructuredSelector } from 'reselect';\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n_c = CollectionsOverviewWithSpinner;\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n_c2 = CollectionPageWithSpinner;\n\nclass Shop extends Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n  }\n\n  render() {\n    const {\n      isCollectionFetching,\n      match\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionsOverviewWithSpinner, {\n          isLoading: isCollectionFetching,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:categoryId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionPageWithSpinner, {\n          isLoading: isCollectionFetching,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(null, mapDispatchToProps)(Shop);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionsOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionPageWithSpinner\");","map":{"version":3,"sources":["/home/diego/Documents/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Component","Route","connect","CollectionsOverview","CollectionPage","fetchCollectionsStartAsync","WithSpinner","createStructuredSelector","selectIsCollectionFetching","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","Shop","componentDidMount","props","render","isCollectionFetching","match","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;;AAEA,MAAMC,8BAA8B,GAAGH,WAAW,CAACH,mBAAD,CAAlD;KAAMM,8B;AACN,MAAMC,yBAAyB,GAAGJ,WAAW,CAACF,cAAD,CAA7C;MAAMM,yB;;AAEN,MAAMC,IAAN,SAAmBX,SAAnB,CAA6B;AAC1BY,EAAAA,iBAAiB,GAAG;AACjB,UAAM;AAAEP,MAAAA;AAAF,QAAiC,KAAKQ,KAA5C;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACN,UAAM;AAAEC,MAAAA,oBAAF;AAAwBC,MAAAA;AAAxB,QAAkC,KAAKH,KAA7C;AACA,wBACG;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACG,QAAC,KAAD;AACG,QAAA,KAAK,MADR;AACS,QAAA,IAAI,EAAG,GAAEG,KAAK,CAACC,IAAK,EAD7B;AAEG,QAAA,MAAM,EAAGJ,KAAD,iBAAU,QAAC,8BAAD;AAAgC,UAAA,SAAS,EAAEE,oBAA3C;AAAA,aAAqEF;AAArE;AAAA;AAAA;AAAA;AAAA;AAFrB;AAAA;AAAA;AAAA;AAAA,cADH,eAKG,QAAC,KAAD;AACG,QAAA,IAAI,EAAG,GAAEG,KAAK,CAACC,IAAK,cADvB;AAEG,QAAA,MAAM,EAAGJ,KAAD,iBAAW,QAAC,yBAAD;AAA2B,UAAA,SAAS,EAAEE,oBAAtC;AAAA,aAAgEF;AAAhE;AAAA;AAAA;AAAA;AAAA;AAFtB;AAAA;AAAA;AAAA;AAAA,cALH;AAAA;AAAA;AAAA;AAAA;AAAA,YADH;AAYF;;AAnByB;;AAqB7B,MAAMK,eAAe,GAAGX,wBAAwB,CAAC;AAC9CQ,EAAAA,oBAAoB,EAAEP;AADwB,CAAD,CAAhD;;AAIA,MAAMW,kBAAkB,GAAGC,QAAQ,KAAK;AACrCf,EAAAA,0BAA0B,EAAE,MAAMe,QAAQ,CAACf,0BAA0B,EAA3B;AADL,CAAL,CAAnC;;AAIA,eAAeH,OAAO,CAAC,IAAD,EAAOiB,kBAAP,CAAP,CAAkCR,IAAlC,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component'\nimport CollectionPage from '../collection/collection.component';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { createStructuredSelector } from 'reselect';\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selector';\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass Shop extends Component {\n   componentDidMount() {\n      const { fetchCollectionsStartAsync } = this.props;\n   }\n   \n   render() {\n      const { isCollectionFetching, match } = this.props;\n      return(\n         <div className='shop-page'>\n            <Route \n               exact path={`${match.path}`} \n               render={(props)=> <CollectionsOverviewWithSpinner isLoading={isCollectionFetching} {...props} />} \n            />\n            <Route \n               path={`${match.path}/:categoryId`} \n               render={(props) => <CollectionPageWithSpinner isLoading={isCollectionFetching} {...props} /> }\n            />\n         </div>\n      );\n   }\n}\nconst mapStateToProps = createStructuredSelector({\n   isCollectionFetching: selectIsCollectionFetching\n})\n\nconst mapDispatchToProps = dispatch => ({\n   fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n})\n\nexport default connect(null, mapDispatchToProps)(Shop);"]},"metadata":{},"sourceType":"module"}