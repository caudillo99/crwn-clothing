{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyDqn9zu46D4WVrNu8HRfCw8Dr6awvGeeVA\",\n  authDomain: \"crwn-app-57620.firebaseapp.com\",\n  projectId: \"crwn-app-57620\",\n  storageBucket: \"crwn-app-57620.appspot.com\",\n  messagingSenderId: \"876674458009\",\n  appId: \"1:876674458009:web:734ef00cdf5c7288053308\",\n  measurementId: \"G-2BR3WS0FRX\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n  console.log(snapShot);\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  propmt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/home/diego/Documents/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","console","log","exists","displayName","email","createdAt","Date","set","error","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","propmt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACZC,EAAAA,MAAM,EAAE,yCADI;AAEZC,EAAAA,UAAU,EAAE,gCAFA;AAGZC,EAAAA,SAAS,EAAE,gBAHC;AAIZC,EAAAA,aAAa,EAAE,4BAJH;AAKZC,EAAAA,iBAAiB,EAAE,cALP;AAMZC,EAAAA,KAAK,EAAE,2CANK;AAOZC,EAAAA,aAAa,EAAE;AAPH,CAAf;AAUA,OAAO,MAAMC,yBAAyB,GAAG,OAAMC,QAAN,EAAgBC,cAAhB,KAAmC;AACzE,MAAG,CAACD,QAAJ,EAAc;AACd,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AACA,MAAI,CAACA,QAAQ,CAACI,MAAd,EAAsB;AACnB,UAAM;AAACC,MAAAA,WAAD;AAAcC,MAAAA;AAAd,QAAwBZ,QAA9B;AACA,UAAMa,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACD,YAAMZ,OAAO,CAACa,GAAR,CAAY;AACfJ,QAAAA,WADe;AAEfC,QAAAA,KAFe;AAGfC,QAAAA,SAHe;AAIf,WAAGZ;AAJY,OAAZ,CAAN;AAMF,KAPD,CAOE,OAAOe,KAAP,EAAc;AACbR,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCO,KAAK,CAACC,OAAzC;AACF;AACH;;AACD,SAAOf,OAAP;AACF,CArBM;AAuBPZ,QAAQ,CAAC4B,aAAT,CAAuB3B,MAAvB;AAEA,OAAO,MAAM4B,IAAI,GAAG7B,QAAQ,CAAC6B,IAAT,EAAb;AACP,OAAO,MAAMhB,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB;AAEP,MAAMiB,QAAQ,GAAG,IAAI9B,QAAQ,CAAC6B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAE;AAAT,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAe9B,QAAf","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nconst config = {\n   apiKey: \"AIzaSyDqn9zu46D4WVrNu8HRfCw8Dr6awvGeeVA\",\n   authDomain: \"crwn-app-57620.firebaseapp.com\",\n   projectId: \"crwn-app-57620\",\n   storageBucket: \"crwn-app-57620.appspot.com\",\n   messagingSenderId: \"876674458009\",\n   appId: \"1:876674458009:web:734ef00cdf5c7288053308\",\n   measurementId: \"G-2BR3WS0FRX\"\n};\n\nexport const createUserProfileDocument = async(userAuth, additionalData) => {\n   if(!userAuth) return;\n   const userRef = firestore.doc(`users/${userAuth.uid}`);\n   const snapShot = await userRef.get()\n   console.log(snapShot);\n   if (!snapShot.exists) {\n      const {displayName, email } = userAuth;\n      const createdAt = new Date();\n\n      try {\n         await userRef.set({\n            displayName,\n            email,\n            createdAt,\n            ...additionalData\n         })\n      } catch (error) {\n         console.log('error creating user', error.message );\n      }\n   }\n   return userRef;\n}\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({propmt: 'select_account'});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}