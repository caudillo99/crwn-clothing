{"ast":null,"code":"var _jsxFileName = \"/home/diego/Documents/crwn-clothing/src/components/sign-in/sign-in.component.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../form-input/form-input.component.jsx\";\nimport CustomButton from \"../custom-button/custom-button.component.jsx\";\nimport { emailSignInStart, googleSignInStart } from \"../../redux/user/user.actions.js\";\nimport \"./sign-in.styles.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  async handleSubmit(e) {\n    e.preventDefault();\n    const {\n      email,\n      password\n    } = this.state;\n  }\n\n  handleChange(e) {\n    const {\n      value,\n      name\n    } = e.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    const {\n      googleSignInStart,\n      emailSignInStart\n    } = this.props;\n    const {\n      email,\n      password\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sign-in\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"I already have an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Sign In with your email and password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"email\",\n          type: \"email\",\n          handleChange: this.handleChange,\n          label: \"Email\",\n          value: email,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"password\",\n          type: \"password\",\n          handleChange: this.handleChange,\n          label: \"Password\",\n          value: password,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n            onClick: emailSignInStart,\n            children: \" Sign In \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n            type: \"button\",\n            onClick: googleSignInStart,\n            isGoogleSignIn: true,\n            children: \"Sign in with Google\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: () => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/home/diego/Documents/crwn-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","Component","connect","FormInput","CustomButton","emailSignInStart","googleSignInStart","SignIn","constructor","props","state","email","password","handleSubmit","bind","handleChange","e","preventDefault","value","name","target","setState","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../form-input/form-input.component.jsx\";\nimport CustomButton from \"../custom-button/custom-button.component.jsx\";\nimport {\n  emailSignInStart,\n  googleSignInStart,\n} from \"../../redux/user/user.actions.js\";\n\nimport \"./sign-in.styles.scss\";\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  async handleSubmit(e) {\n    e.preventDefault();\n\n    const { email, password } = this.state;\n  }\n\n  handleChange(e) {\n    const { value, name } = e.target;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    const { googleSignInStart, emailSignInStart } = this.props;\n    const { email, password } = this.state;\n    return (\n      <div className=\"sign-in\">\n        <h2>I already have an account</h2>\n        <span>Sign In with your email and password</span>\n\n        <form>\n          <FormInput\n            name=\"email\"\n            type=\"email\"\n            handleChange={this.handleChange}\n            label=\"Email\"\n            value={email}\n            required\n          />\n          <FormInput\n            name=\"password\"\n            type=\"password\"\n            handleChange={this.handleChange}\n            label=\"Password\"\n            value={password}\n            required\n          />\n\n          <div className=\"buttons\">\n            <CustomButton onClick={emailSignInStart}> Sign In </CustomButton>\n            <CustomButton\n              type=\"button\"\n              onClick={googleSignInStart}\n              isGoogleSignIn\n            >\n              Sign in with Google\n            </CustomButton>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: () => dispatch(emailSignInStart({ email, password })),\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n"]},"metadata":{},"sourceType":"module"}